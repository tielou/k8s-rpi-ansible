---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: nfs-client-provisioner
  namespace: default
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nfs-client-provisioner-runner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "update", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: run-nfs-client-provisioner
subjects:
  - kind: ServiceAccount
    name: nfs-client-provisioner
    namespace: default
roleRef:
  kind: ClusterRole
  name: nfs-client-provisioner-runner
  apiGroup: rbac.authorization.k8s.io
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: leader-locking-nfs-client-provisioner
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: leader-locking-nfs-client-provisioner
  namespace: default
subjects:
  - kind: ServiceAccount
    name: nfs-client-provisioner
    namespace: default
roleRef:
  kind: Role
  name: leader-locking-nfs-client-provisioner
  apiGroup: rbac.authorization.k8s.io
# NFS storage class ssd
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: storage-ssd
provisioner: nfs-storage-ssd # must match deployment's PROVISIONER_NAME env var
parameters:
  archiveOnDelete: "false"

# NFS storage class hdd
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: storage-hdd
provisioner: nfs-storage-hdd # must match deployment's PROVISIONER_NAME env var
parameters:
  archiveOnDelete: "false"

# NFS Deployment.
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: nfs-client-provisioner
  namespace: default
spec:
  selector:
    matchLabels:
      app: nfs-client-provisioner
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nfs-client-provisioner
        name: nfs-client-provisioner
    spec:
      serviceAccountName: nfs-client-provisioner
      containers:
        - name: nfs-client-provisioner-ssd
          imagePullPolicy: IfNotPresent
          image: quay.io/external_storage/nfs-client-provisioner-arm:latest
          volumeMounts:
            - name: nfs-client-root-ssd
              mountPath: /persistentvolumes
          env:
            - name: PROVISIONER_NAME
              value: nfs-storage-ssd
            - name: NFS_SERVER
              value: {{ nfs_master_ip }}
            - name: NFS_PATH
              value: {{ nfs_shares[0].share }}
        - name: nfs-client-provisioner-hdd
          imagePullPolicy: IfNotPresent
          image: quay.io/external_storage/nfs-client-provisioner-arm:latest
          volumeMounts:
            - name: nfs-client-root-hdd
              mountPath: /persistentvolumes
          env:
            - name: PROVISIONER_NAME
              value: storage-hdd
            - name: NFS_SERVER
              value: {{ nfs_master_ip }}
            - name: NFS_PATH
              value: {{ nfs_shares[1].share }}
      volumes:
        - name: nfs-client-root-ssd
          nfs:
            server: {{ nfs_master_ip }}
            path: {{ nfs_shares[0].share }}
        - name: nfs-client-root-hdd
          nfs:
            server: {{ nfs_master_ip }}
            path: {{ nfs_shares[1].share }}
      tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 300
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 300

